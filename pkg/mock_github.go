// Code generated by MockGen. DO NOT EDIT.
// Source: provider.go

// Package pkg is a generated GoMock package.
package pkg

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	github "github.com/google/go-github/v72/github"
)

// MockProvider is a mock of Provider interface.
type MockProvider struct {
	ctrl     *gomock.Controller
	recorder *MockProviderMockRecorder
}

// MockProviderMockRecorder is the mock recorder for MockProvider.
type MockProviderMockRecorder struct {
	mock *MockProvider
}

// NewMockProvider creates a new mock instance.
func NewMockProvider(ctrl *gomock.Controller) *MockProvider {
	mock := &MockProvider{ctrl: ctrl}
	mock.recorder = &MockProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProvider) EXPECT() *MockProviderMockRecorder {
	return m.recorder
}

// ListIssues mocks base method.
func (m *MockProvider) ListIssues(query string, opts github.SearchOptions) (*github.IssuesSearchResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListIssues", query, opts)
	ret0, _ := ret[0].(*github.IssuesSearchResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListIssues indicates an expected call of ListIssues.
func (mr *MockProviderMockRecorder) ListIssues(query, opts interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListIssues", reflect.TypeOf((*MockProvider)(nil).ListIssues), query, opts)
}

// ListRepos mocks base method.
func (m *MockProvider) ListRepos(query string, opts github.SearchOptions) (*github.RepositoriesSearchResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRepos", query, opts)
	ret0, _ := ret[0].(*github.RepositoriesSearchResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRepos indicates an expected call of ListRepos.
func (mr *MockProviderMockRecorder) ListRepos(query, opts interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRepos", reflect.TypeOf((*MockProvider)(nil).ListRepos), query, opts)
}
